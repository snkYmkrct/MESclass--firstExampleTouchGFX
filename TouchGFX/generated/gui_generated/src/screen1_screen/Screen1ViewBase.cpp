/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#ifdef USE_HAL_DRIVER

#include "main.h"

#endif


Screen1ViewBase::Screen1ViewBase() :
    interaction4Counter(0),
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 320, 240);
    box1.setColor(touchgfx::Color::getColorFromRGB(16, 5, 41));

    toggleButton1.setXY(96, 101);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButton1.setAction(buttonCallback);

    image1.setXY(136, 30);
    image1.setVisible(false);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_HOME_48_ID));

    image2.setXY(138, 31);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_LARGE_HIGHLIGHT_ID));

    buttonWithLabel1.setXY(75, 160);
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_GDHW));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setAction(buttonCallback);

    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_ICONS_SOUND_32_ID), 103, 144);
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    modalWindow1.setShadeAlpha(150);
    modalWindow1.hide();

    add(__background);
    add(box1);
    add(toggleButton1);
    add(image1);
    add(image2);
    add(buttonWithLabel1);
    add(modalWindow1);
}

void Screen1ViewBase::setupScreen()
{

}

//Handles delays
void Screen1ViewBase::handleTickEvent()
{
    if(interaction4Counter > 0)
    {
        interaction4Counter--;
        if(interaction4Counter == 0)
        {
            //Interaction5
            //When Interaction4 completed hide modalWindow1
            //Hide modalWindow1
            modalWindow1.setVisible(false);
            modalWindow1.invalidate();
        }
    }
}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //Interaction1
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        if (image1.isVisible()) {
        	image1.setVisible(false);
              	image1.invalidate();
        
               image2.setVisible(true);
               image2.invalidate();
        }
        else {
        	image2.setVisible(false);
              	image2.invalidate();
        
               image1.setVisible(true);
               image1.invalidate();
        }
    }
    else if (&src == &buttonWithLabel1)
    {
        //Interaction2
        //When buttonWithLabel1 clicked execute C++ code
        //Execute C++ code
        #ifdef USE_HAL_DRIVER
        
        HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
        
        #endif

        //Interaction3
        //When buttonWithLabel1 clicked show modalWindow1
        //Show modalWindow1
        modalWindow1.setVisible(true);
        modalWindow1.invalidate();

        //Interaction4
        //When Interaction3 completed delay
        //Delay for 2000 ms (120 Ticks)
        interaction4Counter = INTERACTION4_DURATION;
    }
}
